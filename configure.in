AC_INIT(Xnee,2.05.93,bug-xnee@gnu.org)

AC_CONFIG_AUX_DIR(./autotools/)

AM_INIT_AUTOMAKE(Xnee,2.05.93)


AC_PROG_INSTALL
AC_PROG_CC
AC_LANG_C
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_X
AC_PATH_XTRA
AC_FUNC_VPRINTF
AC_CHECK_HEADERS(stdarg.h varargs.h, break)

AC_PATH_PROG(AWK,awk)
AC_PATH_PROG(BASH,bash,sh)

# Add X libs 
LIBS="$LIBS $X_LIBS"

AC_CHECK_LIB(c, dlopen, LIBDL="", [AC_CHECK_LIB(dl, dlopen, LIBDL="")])
AC_CHECK_LIB(c, sem_init, LIBSEMA="", [AC_CHECK_LIB(pthread, sem_init, LIBSEMA="")])
AC_CHECK_LIB(Xtst, XTestFakeMotionEvent, LIBXTST="-lXtst",[AC_CHECK_LIB(Xext,XTestFakeMotionEvent , LIBXTST="-lXext")])

GENERATION_DIRS=""

if test "x$LIBXTST" = "x" ; 
then
    echo ""
    echo " **** ERROR **** "
    echo ""
    echo "Could not locate the needed X11 extensions:"
    echo ""
    echo "   RECORD"
    echo "   XTest"
    echo ""
    echo "Make sure you have them installed before building Xnee"
    echo ""
    echo "  ... on Debian do: apt-get install libxtst-dev"
    echo " "
    exit 1
fi

AC_ARG_ENABLE(gui,
[  --enable-gui       build the GUI frontend to Xnee],
[case "${enableval}" in
  yes) buildgui=true ;;
  no)  buildgui=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-gui) ;;
esac],[buildgui=true])

AC_ARG_ENABLE(gnome-applet,
[  --enable-gnome-applet   build the Gnome Panel frontend to Xnee],
[case "${enableval}" in
  yes) buildgapplet=true ;;
  no)  buildgapplet=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-gnome-applet) ;;
esac],[buildgapplet=false])

AC_ARG_ENABLE(doc,
[  --enable-doc       build Xnee documentation],
[case "${enableval}" in
  yes) builddoc=true ;;
  no)  builddoc=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-doc) ;;
esac],[builddoc=true])

AC_ARG_ENABLE(doconly,
[  --enable-doconly       build Xnee documentation only],
[case "${enableval}" in
  yes) doconly=true ;;
  no)  doconly=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-doconly) ;;
esac],[doconly=false])

AC_ARG_ENABLE(cli,
[  --enable-cli       build Xnee command line tool],
[case "${enableval}" in
  yes) buildcli=true ;;
  no)  buildcli=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-cli) ;;
esac],[buildcli=true])

AC_ARG_ENABLE(lib,
[  --enable-lib       build Xnee library (libxnee)],
[case "${enableval}" in
  yes) buildlib=true ;;
  no)  buildlib=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-lib) ;;
esac],[buildlib=true])

AC_ARG_ENABLE(xosd,
[  --enable-xosd       build Xnee with no verbose mode support],
[case "${enableval}" in
  yes) xosd=true ;;
  no)  xosd=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-xosd) ;;
esac],[xosd=true])

AC_ARG_ENABLE(verbose,
[  --enable-verbose       build Xnee with no verbose mode support],
[case "${enableval}" in
  yes) verbose=true ;;
  no)  verbose=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-verbose) ;;
esac],[verbose=true])

AC_ARG_ENABLE(buffer_verbose,
[  --enable-buffer_verbose  build xnee without support for buffer printouts],
[case "${enableval}" in
  yes) buffer_verbose=true ;;
  no)  buffer_verbose=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --disable-buffer_verbose) ;;
esac],[buffer_verbose=false])

AC_ARG_ENABLE(gcov,
[  --enable-gcov           build xnee with support for gcov],
[case "${enableval}" in
  yes) gcov=true ;;
  no)  gcov=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-gcov) ;;
esac],[gcov=false])

AC_ARG_ENABLE(gprof,
[  --enable-gprof          build xnee with support for gprof],
[case "${enableval}" in
  yes) gprof=true ;;
  no)  gprof=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-gprof) ;;
esac],[gprof=false])

AC_ARG_ENABLE(pedantic,
[  --enable-pedantic          build xnee with support for pedantic compiling],
[case "${enableval}" in
  yes) pedantic=true ;;
  no)  pedantic=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-pedantic) ;;
esac],[pedantic=false])

AC_ARG_ENABLE(paranoid-pedantic,
[  --enable-paranoid-pedantic          build xnee with support for paranoid pedantic compiling],
[case "${enableval}" in
  yes) para_pedantic=true ;;
  no)  para_pedantic=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-paranoid-pedantic) ;;
esac],[para_pedantic=false])

AM_CONDITIONAL(BUILDDOC, test x$builddoc = xtrue)
AM_CONDITIONAL(VERBOSE, test x$verbose = xtrue)
AM_CONDITIONAL(GCOV, test x$gcov = xtrue)
AM_CONDITIONAL(GPROF, test x$gprof = xtrue)
AM_CONDITIONAL(PEDANTIC,    test x$pedantic = xtrue)
AM_CONDITIONAL(BUF_VERBOSE, test x$buffer_verbose = xtrue)
AM_CONDITIONAL(XOSD, test x$xosd = xtrue)
AM_CONDITIONAL(DOCONLY, test x$doconly = xtrue)

if test x$verbose = xtrue ;
then
	VERBOSE_FLAG=-DUSE_VERBOSE
else
	VERBOSE_FLAG=-DNO_VERBOSE
fi

if test x$gcov = xtrue ;
then
	GCOV_FLAG=-fprofile-arcs -ftest-coverage 
else
	GCOV_FLAG=
fi

if test x$gprof = xtrue ;
then
	GPROF_FLAG=-pg
else
	GPROF_FLAG=
fi

if test x$buffer_verbose = xtrue ;
then
	BUF_VERBOSE_FLAG=-DUSE_BUF_VERBOSE
else
	BUF_VERBOSE_FLAG=-DNO_BUF_VERBOSE
fi

if test x$pedantic = xtrue ;
then
	PEDANTIC_FLAGS= -W -Wall -pedantic -pedantic-errors  -Werror
else
	PEDANTIC_FLAGS=
fi

if test x$para_pedantic = xtrue ;
then
	PEDANTIC_FLAGS=
else
	PEDANTIC_FLAGS=
fi



dnl Forward some variables to the makefiles
AC_SUBST(LIBDL)
AC_SUBST(LIBSEMA)
X11_LIBS="-lX11 $LIBXTST"
AC_SUBST(X11_LIBS)


AM_MAINTAINER_MODE
AM_CONFIG_HEADER(config.h)

CLI_DIR=
LIB_DIR=
DOC_DIR=
GUI_DIR=

if test x$buildgapplet = xtrue || test x$buildgui = xtrue  ; 
then
	AC_ISC_POSIX
	AC_PROG_CC
	AM_PROG_CC_STDC
	AC_HEADER_STDC
	AC_PATH_XTRA
	pkg_modules="gtk+-2.0 >= 2.0.0"
	PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
	AC_SUBST(PACKAGE_CFLAGS)
	AC_SUBST(PACKAGE_LIBS)
fi

if test x$buildgui = xtrue ; 
then
dnl	GETTEXT_PACKAGE=gnee
dnl	AC_SUBST(GETTEXT_PACKAGE)
dnl	AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [The gettext package])

	dnl Add the languages which your application supports here.
dnl	ALL_LINGUAS=""
dnl	AM_GLIB_GNU_GETTEXT
	GUI_DIR=gnee

else
	GUI_DIR=
fi

if test x$buildgapplet = xtrue; 
then

dnl	GETTEXT_PACKAGE=pnee
dnl	AC_SUBST(GETTEXT_PACKAGE)
dnl	AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [The gettext package])

dnl Add the languages which your application supports here.
dnl	ALL_LINGUAS=""
dnl	AM_GLIB_GNU_GETTEXT
	GNOME_APPLET_DIR=pnee
else
	GNOME_APPLET_DIR=
fi

if test x$buildcli = xtrue 
then
	CLI_DIR=cnee
else
	CLI_DIR=
fi


if test x$buildlib = xtrue ; 
then
	LIB_DIR=libxnee
else
	LIB_DIR=
fi


if test x$builddoc = xtrue ; 
then
	DOC_DIR=doc
else
	DOC_DIR=
fi


FOO_DIR=foo
if test x$doconly = xtrue ; 
then
	buildgui=false
	buildlib=false
	buildcli=false
	builddoc=false
	LIB_DIR=
	CLI_DIR=
	GUI_DIR=
	FOO_DIR=bar
	DOC_DIR=doc
	DOC_MAKEFILES=
fi



show_doc_program()
{
    PROG_VAR_TO_CHECK=$1
    PROG_TO_CHECK=$2
    MESS=$3
    if test "x$PROG_VAR_TO_CHECK" = "x" 
    then
	echo "       ***** $PROG_TO_CHECK missing, $MESS"
    else
	echo "       $PROG_TO_CHECK  - $PROG_VAR_TO_CHECK"
    fi
}

DOC_NOT_BUILT_WARNING=false
check_program()
{
    PROG_VAR_TO_CHECK=$1
    PROG_TO_CHECK=$2
    COMMENT_ON_FAIL=$3
    
    if test "x$PROG_VAR_TO_CHECK" = "x" 
	then
	echo ""
	echo " **** Warning **** "
	echo " * "
	echo " * Failed to to find $PROG_TO_CHECK"
	echo " * "
	echo "$COMMENT_ON_FAIL"
	echo " * "
	echo " ****************** "
	echo " "
	#exit 1
	DOC_NOT_BUILT_WARNING=true
    fi
}

check_doc_program()
{
    check_program "$1" "$2" " * Suggested solutions: 
 *    1) Build Xnee without documentation,
 *      ./configure --disable-doc
 *
 *   2) Install $2
 *
 *   3) If $2 is installed (and not found) make sure $2 is in the PATH variable"
}

DOC_TARGETS="info txt"
if test x$builddoc = xtrue ; 
then
	AC_PATH_PROG(DIA,dia,,)
	check_doc_program "$DIA" "dia"

	AC_PATH_PROG(TEXI2HTML,texi2html,,)
	check_doc_program "$TEXI2HTML" "texi2html"

	AC_PATH_PROG(DVI2PS,dvi2ps,,)
	check_doc_program "$DVI2PS" "dvi2ps"

	AC_PATH_PROG(PS2PDF,ps2pdf,,)
	check_doc_program "$PS2PDF" "ps2pdf"

	AC_PATH_PROG(EPSTOPDF,epstopdf,,)
	check_doc_program "$EPSTOPDF" "epstopdf"

	AC_PATH_PROG(CONVERT,convert,,)
	check_doc_program "$CONVERT" "convert"

#	AC_PATH_PROG(DOXYGEN,doxygen,,)
#	check_doc_program "$DOXYGEN" "doxygen"

	AC_PATH_PROG(MAKEINFO,makeinfo,,)
	check_doc_program "$MAKEINFO" "makeinfo"


	if test x$DOC_NOT_BUILT_WARNING = xtrue ;
	    then
	    echo " "
	    echo " "
	    echo "          WARNING"
	    echo " " 
	    echo " ** Documents are not built ** "
	    echo " "
	    echo " "
	    DOC_DIR=""
	    DOC_TARGETS=""
	    builddoc=false
	    doconly=false
	else
	    DOC_TARGETS="images html info txt pdf ps"
	fi
fi

AC_SUBST(DOC_TARGETS)
AC_SUBST(GUI_DIR)
AC_SUBST(GNOME_APPLET_DIR)
AC_SUBST(CLI_DIR)
AC_SUBST(LIB_DIR)
AC_SUBST(DOC_DIR)
AC_SUBST(FOO_DIR)

MAKEFILES_TO_GEN=""
MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN Makefile examples/Makefile sessions/Makefile share/Makefile"

EXCLUDED_COMPONENTS=""
INCLUDED_COMPONENTS=""
add_excl()
{
	EXCLUDED_COMPONENTS="${EXCLUDED_COMPONENTS}\n        $1"
}

add_incl()
{
	INCLUDED_COMPONENTS="${INCLUDED_COMPONENTS}\n        $1"
}

if test x$doconly = xtrue || test x$builddoc = xtrue  ; 
then
	MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN doc/Makefile"
	add_incl "doc"
else
	add_excl "doc"
fi

if test x$buildlib = xtrue ; 
then
        MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN libxnee/Makefile libxnee/test/Makefile libxnee/src/Makefile"
	add_incl "libxnee"
else
	add_excl "libxnee"
fi

if test x$buildcli = xtrue ; 
then
	MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN cnee/Makefile cnee/src/Makefile"
	add_incl "cli"
else
	add_excl "cli"
fi

if test x$buildgui = xtrue ; 
then
	MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN gnee/Makefile gnee/src/Makefile"
	add_incl "gnee"
else
	add_excl "gnee"
fi


if test x$buildgapplet = xtrue ; 
then
#	AM_GCONF_SOURCE_2
	PANEL_APPLET_DIR="${libdir}/gnome-panel"
	PANEL_SERVER_DIR="${libdir}/bonobo/servers"
	AC_SUBST(PANEL_SERVER_DIR)
	AC_SUBST(PANEL_APPLET_DIR)
	AC_PATH_PROG(GCONFTOOL, gconftool-2)
	PANEL_FLAGS=`pkg-config --cflags libpanelapplet-2.0`
	PANEL_LD_FLAGS=`pkg-config  --libs libpanelapplet-2.0`
	AC_SUBST(PANEL_FLAGS)
	AC_SUBST(PANEL_LD_FLAGS)
#        AC_OUTPUT([ pnee/Makefile pnee/src/Makefile  pnee/pixmaps/Makefile ])
	MAKEFILES_TO_GEN="$MAKEFILES_TO_GEN pnee/Makefile pnee/src/Makefile pnee/pixmaps/Makefile"
	add_incl "pnee"
else
	add_excl "pnee"
fi

AC_SUBST(MAKEFILES_TO_GEN)
echo "Making the following Makefiles:"
echo "  $MAKEFILES_TO_GEN"
#AC_OUTPUT([ $MAKEFILES_TO_GEN ])
AC_OUTPUT([ Makefile libxnee/Makefile libxnee/test/Makefile libxnee/src/Makefile examples/Makefile sessions/Makefile share/Makefile doc/Makefile cnee/Makefile cnee/src/Makefile gnee/Makefile gnee/src/Makefile pnee/Makefile pnee/src/Makefile pnee/pixmaps/Makefile  ])

#
# Trick to fool automake
#
if test "x$dummy_variable_xnee" = "x_dummy_value_xnee" ;
then 
     echo
#     AC_CONFIG_FILES([ Makefile examples/Makefile sessions/Makefile share/Makefile doc/Makefile cnee/Makefile cnee/src/Makefile gnee/Makefile gnee/src/Makefile pnee/Makefile pnee/src/Makefile pnee/pixmaps/Makefile  ])
fi

#
# Final words 
#
#
#
echo " " 
echo " " 
echo " Configuration of Xnee finished "
echo " ============================== "
echo " "
echo "   Xnee Developer flags"
echo "   -------------------------------------"
echo "    VERBOSE_FLAG         $VERBOSE_FLAG"
echo "    GCOV_FLAG            $GCOV_FLAG"
echo "    GPROF_FLAG           $GPROF_FLAG"
echo "    BUF_VERBOSE_FLAG     $BUF_VERBOSE_FLAG"
echo "    PEDANTIC_FLAGS       $PEDANTIC_FLAGS"
echo "    LIBDL                $LIBDL"
echo "    LIBSEMA              $LIBSEMA"
echo "    X11_LIBS             $X11_LIBS"
echo "    PANEL_SERVER_DIR     $PANEL_SERVER_DIR"
echo "    PANEL_APPLET_DIR     $PANEL_APPLET_DIR"
#echo "    GUI_DIR              $GUI_DIR"
#echo "    GNOME_APPLET_DIR     $GNOME_APPLET_DIR"
#echo "    CLI_DIR              $CLI_DIR"
#echo "    LIB_DIR              $LIB_DIR"
#echo "    DOC_DIR              $DOC_DIR"
echo " "
if test x$builddoc = xtrue ; 
then
	echo "   Programs used to build documentation "
	echo "   -------------------------------------"
	show_doc_program "$DIA" "dia"  "Can't generate pictures from dia sources"
	show_doc_program "$TEXI2HTML" "texi2html"  "can not generate html pages"
	show_doc_program "$DVI2PS" "dvi2ps"   "can not generate ps "
	show_doc_program "$PS2PDF" "ps2pdf"  "can not generate pdf"
	show_doc_program "$EPSTOPDF" "epstopdf"  "can not generate pdf"
	show_doc_program "$CONVERT" "convert"  "can not generate convert between formats"
	show_doc_program "$MAKEINFO" "makeinfo"  "can not make info pages"
fi
echo ""
echo "   Building the following components "
echo "   -------------------------------------"
printf "    $INCLUDED_COMPONENTS"
echo " "
echo " "
echo "   Excluding the following components "
echo "   -------------------------------------"
if test "x$EXCLUDED_COMPONENTS" = "x" ;
then
echo "        no components are excluded from build"
else
printf "    $EXCLUDED_COMPONENTS"
echo " "
fi
echo " "
echo " If the settings are not ok, configure again"
echo "     ./configure <your options>"
echo " "
echo " To list all the configure options: "
echo "     ./configure --help"
echo " "
echo " "
echo " If the above is ok, proceed with the build:"
echo "      make"
echo " and (perhaps as root)"
echo "      make install"


