In this section you will be given information about key concepts in X11 and Xnee. It is
vital that you read through this chapter. 

@section  Modes
@cindex modes
Xnee has four modes:
@itemize @bullet
@item	record 
@item	replay
@item	retype
@item	distribute
@end itemize
The distribution mechanism can be used together with the other three.

@subsection  Record
@cindex recording
When record mode is used Xnee receives a copy of the data sent to and from the 
X server. The copy is printed to a file. Xnee can record the whole X11 
protocol, not just mouse and keyboard events.

@ifnotinfo
This picture gives an overview of Xnee and the files used when recording.
@*
@image{xnrec, 10cm}
@end ifnotinfo


@subsection  Replay
@cindex replaying
When replay mode is used Xnee reads data from a file or stdin. These data is 
either sent to the server (if it is a keyboard or a mouse event) or used to 
synchronise with (if any of the other data). 

@ifnotinfo
This picture gives an overview of Xnee and the files used when replaying.
@*
@image{xnrep, 10cm}
@end ifnotinfo


@subsection  Retype
@cindex retype
Xnee can retype the contents of a text file. This is useful when combining 
replaying of different recorded session. You can change the text written in
for example an editor (e.g emacs) without having to re-record the complete
sessions. 

@subsection  Distribution
@cindex distributing
Xnee can fake mouse and keyboard events on multiple displays. This 
distribution mechanism can be used when recording, replaying or retyping.


@section  Ranges
@cindex ranges
What data to record is specified using ranges. Ranges has a start value and 
a stop value. The following data can be recorded: 

@multitable  @columnfractions .10 .45 .45 
@item
@tab @b{Xnee name}
@tab @b{X Protocol Name}

@item
@tab core-requests
@tab Request

@item
@tab device-event		
@tab Event 

@item
@tab delivered-event		
@tab Event

@item
@tab error			
@tab Error

@item
@tab reply			
@tab Reply

@item
@tab ext-requests.ext-major	
@tab Extension Request

@item
@tab ext-requests.ext-minor	
@tab Extension Request

@item
@tab ext-replies.ext-major	
@tab Extension Reply

@item
@tab ext-replies.ext-minor	
@tab Extension Reply

@end multitable
When specifying the ranges when using xnee you can either type the integer value 
of the data or the name of the data. To find out what number belongs to what 
data name, you can use the @code{--print-data-name} option. For an explanation 
of the X protocol data, please read the "X Record Extension Library" or the 
"Record Extension Protocol Specification".


@section  First and last motion event
Xnee has the ability to skip recording of succesive motion events with no 
other data in between. This option is intended to reduce the number of data 
recorded by leaving out unnecessary data. This feature can be invoked with 
the @code{--first-last} flag.

@section  Delay
Sometimes when Xnee starts recording data, the keyrelease (caused by pressing and 
releasing RETURN to execute the Xnee command line) is recorded. This single 
keyrelease (with no corresponding keypress) might confuse the X server. 
With the @code{--time <secs>} option Xnee can be paused for a number of seconds 
before recording/replaying/retyping starts.


@section  Verbose
When enabling verbose mode (@code{--verbose}) Xnee prints a lot of information 
about it's state. This option is only intended for runtime debugging.

@section  Human printouts
Sometimes it's hard to decide what data to use when synchronising. To do this 
you have to analyse what data is sent from the server when recording. Instead of 
reading the data number, s tring representation of the data is printed out. 
To enable this option, use the @code{--human-printouts}.



@section  Invoking Xnee

@subsection  Command line syntax
@cindex command line syntax
To get information about how to use Xnee's command line options please use the man page(s).

@subsection  Project file
To use a Project file use the @code{--project} option,  e.g 
@code{cnee --project xnee/projects/netscape.xns}.

@subsection  Session file
To use a session file use the @code{--file} option,  e.g 
@code{cnee --file user1_session.xns}


@section  Interupting Xnee
@cindex   Interupting xnee
Interupting Xnee when recording or replaying can be done as follows
@itemize @bullet
@item	user specified modifier and key
@item	limit the number of data to record
@item	sending a SIGTERM signal (e.g pressing Control-c in a terminal window)
@end itemize
The prefered way to interrupt xnee is to use the modifier+key. 

@subsection modifier and key
@cindex modifier
@cindex key
It is possible to specify a modifier (e.g Control button) and a key (e.g 'a') 
that will stop the Xnee session. When using this option make sure that the
modifier/key is not used in any way by the applications you are recording. 
You can specify a key+modifier to stop, pause and resume xnee. You can also 
insert a mark in the recorded session file. 

@subsection limit the number of data to record
By specifying the number of data to record (@code{--loops}) xnee stops when this number 
of data is received from the server. When replaying the same amount of data 
is replayed. 

@subsection	sending a SIGTERM signal 
@cindex SIGTERM
The easiest way to send a signal to a process is by launching Xnee
from a terminal window (e.g xterm) and then press Control-c which will
send the SIGTERM signal to Xnee. When replaying it can sometimes be
hard to move the pointer into the terminal window (e.g if a lot of
motion events were recorded that will let you compete with Xnee on
where the mouse pointer shall be located.  Beleive me, you'll end up
lossing that battle).

When using Control-c to stop Xnee you must be aware of that the pressing of the Control key gets recorded. When replaying a recorded session ending with pressing of Control your apps may think you are pressing the Control key. A simple solution for this is to press and release the Control.

@subsection  Stop Xnee with key combination
@cindex      Stop Xnee with key combination
Xnee stops its current action when the user presses the key
combination as specified during setup. Xnee will be shut gracefully.

@subsection  Pause Xnee with key combination
@cindex      Pause Xnee with key combination
Xnee pause its current action when the user presses the key
combination as specified during setup. Xnee will be in paused mode until
the user stops or resumes Xnee.

@subsection  Pause Xnee with key combination
@cindex      Pause Xnee with key combination
Xnee resumes its current paused action when the user presses the key
combination as specified during setup. Xnee will continue where it was
paused.

@subsection  Insert marks Xnee with key combination
@cindex      Insert marks Xnee with key combination
When the user presses the key combination as specified during setup 
Xnee will print a mark in the session file containing a time stamp. This 
feature is intended be used when you want to mark an interresting time/event 
during recording. After recording has finished you can add Xnee scripting 
calls to Xnee which will be interpreted and executed as if they were recorded.


@subsection Limit number of data to record
There a a few ways to limit the number of data Xnee records.
@itemize @bullet
@item	limit the events to recored
@item	limit the data to recored
@item	limit the time to recored
@item	send a signal to xnee (SIGTERM)
@item	use a selfmade record callback function
@end itemize

@subsection Limit the events to record
@cindex limit the events
When having received the specified amount of events from the server, Xnee 
stops the recording. For more information on how to use this option, read
the man page for cnee or the user manual for gnee.

@subsection Limit the data to record
@cindex limit the data
When having received the specified amount of data from the server, Xnee 
stops the recording. For more information on how to use this option, read
the man page for cnee or the user manual for gnee.

@subsection Limit the time to record
@cindex limit the events
When having recorded for the specified amount of time from the server, Xnee 
stops the recording. For more information on how to use this option, read
the man page for cnee or the user manual for gnee.

@subsection Send SIGTERM to Xnee
@cindex SIGTERM
The easiest way to send a signal to a process is by launching Xnee from a 
terminal window (e.g xterm). By pressing Control-c xterm sends the 
SIGTERM signal to Xnee. When replaying it can sometimes be hard to 
move the pointer into the terminal window (e.g if a lot of motion 
events were recorded that will let you compete with Xnee on where 
the mouse pointer shall be located. Beleive me, you'll end up lossing 
that battle).  


@section  Xnee plugins 
@cindex plugins
Xnee supports plugins since version 1.07. For information about how to write 
plugins, download the source code and look at the plugin example which is 
delivered with Xnee.

